"""ПРОГРАММИРУЕМ ЛИФТ"""
# Часто в гостиницах постояльцам выдают ключ-карту от номера, которая также отвечает и за работу лифта.
# Лифт не поедет пока вы не прислоните ключ-карту.
# Более того, если ваша комната расположена на 7 этаже, то лифт может ехать только на 7 этаж.
# Если вы прислоните свою карту и выберете, например, 6 этаж, то лифт не поедет.
# Рядом с программой находится файл db.txt со всеми выданными картами. Файл имеет следующий вид:
#
# 123456;841
# 855814;123
# 471856;731

# Каждая строка хранит номер карты (первое число) и номер комнаты (второе число),
# которая связана с картой. Например, карта 123456 открывает комнату 841.
# Сама комната находится на 8 этаже, за что отвечает первая цифра номера.
#
# Напишите функцию check_access() для управления лифтом.
# Функция должна принимать два текстовых параметра: номер карты и этаж,
# на который хочет подняться постоялец гостиницы.
#
# Если его комната находится на выбранном этаже, то функция должна вернуть True,
# если посетитель выбрал неверный этаж, то функция должна вернуть False,
# если же карты в файле нет, то нужно вернуть None.
#
# Пример использования функции (посетитель с картой 123456, хочет поехать на 8 этаж):
# access = check_access("123456", "8")
# print(access)
# True

import sys


def check_access(card_id: str, room: str):
    access = None
    for line in open("ex2_db.txt", "r", encoding="utf-8"):
        db_id, db_room = line.strip().split(";")
        if db_id == card_id:
            if db_room[0] == room[0]:
                access = True
            else:
                access = False
    return access


print(check_access("855814", "423"))


# def check_access(card_number, floor):
#     for card in open("db.txt", "r"):
#         file_card_number, room = card.strip().split(";")
#         file_floor = room[0]
#         if card_number == file_card_number:
#             return floor == file_floor
#     return None
