"""#1093: ЛУЧШИЙ КИЛОМЕТР
Сложность: 6 из 10
В файле run.txt, который находится рядом с программой, содержится информация о беговой тренировке.
Каждая строка этого файла отвечает за время (в секундах), которое спортсмен затратил на преодоление дистанции в 200 метров.

Рассмотрим пример такого файла:

70
70
67
68
68
65
65
60
61
62
60
63
65
66
67
70
67
68
71

В нём 19 записей, а значит спортсмен пробежал 19 x 200м = 3800 метров. Так как в процессе бега были спуски и подъемы,
а также из-за других факторов, скорость на разных отрезках была разной.

Напишите программу, которая проанализирует данные и выведет лучшее время, которое бегун затратил на километр.
Обратите внимание, что лучший километр может быть в любом месте дистанции.
В данном случае лучший километр — это последовательность 60, 61, 62, 60, 63 или 306 секунд (5 минут 6 секунд).
Этот километр был в промежутке с 1800 по 2800 метров.

Данные нужно вывести в формате ММ:СС

Пример использования (для файла из задачи):
> python program.py
> 05:06
"""

# Учитывая, что одна запись это 500 метров, нужно захватывать сразу промежуток из 5
# Как вариант можно попровать идти с конца, чтобы не выйти за границы списка

# TODO может быть попробовать делать на лету список, его читать и сразу считать лучшее время???

# Читаем файл (пробуем новый способ) и запихиваем его в лист
sec_list = []
with open('run.txt', 'r', encoding='UTF-8') as file:
    for line in file:
        sec_list.append(int(line.strip()))
# print(sec_list, f'длина списка: {len(sec_list)}')

# Проходим список, заранее создаем переменную для лучшего среза и выводим лучшее время в формате ММ:СС
best_time = None
if len(sec_list) > 5:
    for idx in range(len(sec_list) - 4):
        temp = sec_list[idx: idx + 5]
        if best_time is None or sum(temp) < best_time:
            best_time = sum(temp)
        # print(sum(temp), best_time)
    print(f'{best_time // 60:0>2}:{best_time % 60:0>2}')
elif len(sec_list) == 5:
    best_time = sum(sec_list)
    print(f'{best_time // 60:0>2}:{best_time % 60:0>2}')
else:
    print('Лучший километр нельзя посчитать, так как суммарное преодоленное расстояние менее 1 км')


"""РЕШЕНИЕ ПРЕПОДАВАТЕЛЯ
# Открываем файл.
run_file = open("run.txt")

# Читаем данные в список.
times = run_file.readlines()

# Преобразовываем текстовые данные в числовые.
i = 0
while i < len(times):
    times[i] = int(times[i])
    i += 1

# Получаем время первого километра.
current_km_time = sum(times[:5])

# Вычисляем лучшее время км.
best_km_time = current_km_time

# Начинаем вычислять с 5 точки.
i = 5
while i < len(times):
    # Вычисляем текущее время.
    current_time = times[i]

    # Вычисляем время, которое вышло за пределы текущего км.
    first_time = times[i - 5]

    # Вычисляем время текущего км.
    current_km_time = current_km_time - first_time + current_time

    # Если текущее время меньше лучшего километра, то обновляем лучшее время.
    if current_km_time < best_km_time:
        best_km_time = current_km_time

    i += 1

print("{:02}:{:02}".format(best_km_time // 60, best_km_time % 60))

"""
